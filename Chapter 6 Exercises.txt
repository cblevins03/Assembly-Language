TITLE Boolean Calculator 1              (BooleanCalc1.asm)

; This functions as a simple boolean calculator for 32-bit integers.

INCLUDE Irvine32.inc

.data
	CaseTable BYTE '1'					;lookup value
				DWORD	x_AND_y			;address of procedure
	EntrySize = ($-CaseTable)
				BYTE '2'
				DWORD	x_OR_y
				BYTE '3'
				DWORD	NOT_x
				BYTE '4'
				DWORD	x_XOR_y
				BYTE '5'
				DWORD	Exit_Program
	NumberOfEntries = ($-CaseTable)/EntrySize
	prompt BYTE "Press 1. x AND y, 2. x OR y, 3. NOT x, 4. x XOR y, 5. Exit ",0
	msg1 BYTE "x AND y ",0
	msg2 BYTE "x OR y ",0
	msg3 BYTE "NOT x ",0
	msg4 BYTE "x XOR y ",0
	msg5 BYTE "Exit Program ",0
	promptx BYTE "Enter an x in Hexadecimal: ",0
	prompty BYTE "Enter an y in Hexadecimal: ",0
.code
main PROC
	mov edx,OFFSET prompt		;ask user for input
	call WriteString
	call ReadChar				;read character into AL
	mov ebx,OFFSET CaseTable	;point EBX to the table
	mov ecx,NumberOfEntries		;loop counter
L1:
	cmp al,[ebx]				;match found?
	jne L2						;no: continue
	call NEAR PTR [ebx+1]		;yes: call the procedure
	;call WriteString			;display message
	call Crlf
	jmp L3						;exit the search
L2:
	add ebx,EntrySize			;point to the next entry
	loop L1						;repeat until ECX = 0
L3:
	exit
main ENDP


x_AND_y PROC
	call Crlf
	mov edx,OFFSET msg1
	call WriteString
	call Crlf
	mov edx,OFFSET promptx		;ask user for input
	call WriteString
	call ReadHex				;read decimal into EAX
	mov EBX,EAX
	call Crlf
	mov edx,OFFSET prompty		;ask user for input
	call WriteString
	call ReadHex				;read decimal into EAX
	AND EAX,EBX
	call WriteHexB
	ret
x_AND_y ENDP

x_OR_y PROC
	call Crlf
	mov edx,OFFSET msg2
	call WriteString
	call Crlf
	mov edx,OFFSET promptx		;ask user for input
	call WriteString
	call ReadHex				;read decimal into EAX
	mov EBX,EAX
	call Crlf
	mov edx,OFFSET prompty		;ask user for input
	call WriteString
	call ReadHex				;read decimal into EAX
	OR EAX,EBX
	call WriteHexB
	ret
x_OR_y ENDP

NOT_x PROC
	call Crlf
	mov edx,OFFSET msg3
	call WriteString
	call Crlf
	mov edx,OFFSET promptx		;ask user for input
	call WriteString
	call ReadHex				;read decimal into EAX
	NOT eax
	call WriteHexB
	ret
NOT_x ENDP

x_XOR_y PROC
	call Crlf
	mov edx,OFFSET msg4
	call WriteString
	call Crlf
	mov edx,OFFSET promptx		;ask user for input
	call WriteString
	call ReadHex				;read decimal into EAX
	mov EBX,EAX
	call Crlf
	mov edx,OFFSET prompty		;ask user for input
	call WriteString
	call ReadHex				;read decimal into EAX
	XOR EAX,EBX
	call WriteHexB
	ret
x_XOR_y ENDP

Exit_Program PROC
	call Crlf
	mov edx,OFFSET msg5
	call WriteString
	ret
Exit_Program ENDP
END main